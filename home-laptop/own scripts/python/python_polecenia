= Polecenia =
polecenie - jego znaczenie
print ('tekst') - wypisze na ekranie frazę tekst
print (polecenie) - wykona polecenie i wyświetli jego wynik na ekranie
raw_input() - należy to dodać na końcu bo inaczej win$ mignie nam tylko okienko
import nazwa.skryptu.py - importuje skrypt tylko z jednego katalogu/folderu
reload (sciezka do pliku) - przeladowuje skrypt bez zatrzymania i uruchamiania ponownie
execfile('skrypt.py') - inny sposób importowania

= moduly =
import modul
math
math.pi - pi
math.sqrt(liczba) - pierwiastek

import random
random.random() - generowanie
random.choice([1, 2, 3, 4]) - wybierze jedna z podanych w nawiasie

= Typy i operacje =
3.1415 * 2 - mnożenie liczb całkowitych
1.5 * 4 - mnożenie liczb zmiennoprzecinkowych
2 ** 3 - 2 do potegi 3ciej
print 3.1415 * 2 - działania z wynikiem w przyjazdnej postaci dla usera
---
S = 'Mielonka'
len(S) - liczenie długości znaków
---
S[0] - wynik M - pierwszy element (od poczatku) w S (indexowanie)
S[1] - wynik i - drugi element (od poczatku) w S (indexowanie)
S[-1] - wynik a - pierwszy element od konca
S[-2] - wynik k - drugi element od konca
S[len(S)-1] - index ujemny zapisany w trudniejszy sposob
S[1:3] - wynik ie - wycinek z S z indexami od 1 do 2 (bez 3)
S[1:] - wszystko poza 1 znakiem
S[0:7] - wszystkie elementy bez ostatniego
S[:7] - to samo co wyzej
S[:-1] wszystkie elementy bez ostatniego w łatwiejszej postaci
S[:] - calosc s jako kopia najwyzszego poziomu (0:len(S))
S + 'xyz' - konkatenacja (dodanie do 'mielonki' liter xyz)
S * 8 - powtorzenie mielonki 8 razy
---
S = 'mielonka'
S[0] = 'z' - może pokazywać błedy
S = 'z' + S[1:]
S - wynik zielonka
---
S.find('ie') - odnalezienie przesunięcia podłańcucha (czyli znalezienie pierwszej litery)
S.replace('ie', 'XYZ') - wynik MXYZlonka - zastąpienie wystąpień podlancucha innym
